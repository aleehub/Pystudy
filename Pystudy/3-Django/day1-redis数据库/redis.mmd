Mind Map generated by NB MindMap plugin   
> __version__=`1.1`,showJumps=`true`
---

# Redis
> align=`center`


## Redis数据库操作

### 服务器端
> collapsed=`true`


#### 开启服务端
- NOTE
<pre>redis-server</pre>

#### 查看帮助文档
- NOTE
<pre>redis-server --help</pre>

#### 查看服务器进程
- NOTE
<pre>ps aux | grep redis</pre>

#### 杀死 redis服务器
- NOTE
<pre>sudo kill -9 pid</pre>

#### 指定加载的配置文件
- NOTE
<pre>sudo redis-server /etc/redis/redis.conf 指定加载的配置文件</pre>

### 客户端

#### 开启客户端
- NOTE
<pre>redis-cli</pre>

#### 查看帮助文档
- NOTE
<pre>redis-cli --help</pre>

#### 连接redis
- NOTE
<pre>redis-cli</pre>

#### 运行测试
- NOTE
<pre>ping</pre>

#### 切换数据库
- NOTE
<pre>select 10 数字为数据库序号 从0~15</pre>

#### 键命令

##### 查找键
- NOTE
<pre>参数⽀持正则表达式

    keys pattern

例1：查看所有键

    keys *
    
例2：查看名称中包含a的键

keys 'a*'
</pre>

##### 判断键存在
- NOTE
<pre>exists key1

例3：判断键a1是否存在

    exists a1
</pre>

##### 查看键类型
- NOTE
<pre>type key

例4：查看键a1的值类型，为redis⽀持的五种类型中的⼀种

    type a1
</pre>

##### 删除键
- NOTE
<pre>del key1 key2 ...

例5：删除键a2、a3

    del a2 a3
</pre>

##### 设置过期时间
- NOTE
<pre>如果没有指定过期时间则⼀直存在，直到使⽤DEL移除

    expire key seconds

例6：设置键'a1'的过期时间为3秒

    expire 'a1' 3
</pre>

##### 查看有效时间
- NOTE
<pre>ttl key

例7：查看键'bb'的有效时间

    ttl bb
</pre>

## Redis安装
> collapsed=`true`,leftSide=`true`


### Linux
> collapsed=`true`


#### step1:下载
- NOTE
<pre>下载源码，源码安装

wget http://download.redis.io/releases/redis-4.0.9.tar.gz</pre>

#### step2:解压
> leftSide=`true`

- NOTE
<pre>源码解压

tar xzf redis-4.0.9.tar.gz</pre>

#### step3:移动
> leftSide=`true`

- NOTE
<pre>将解压过后的源码，放到usr/local/redis

sudo mv ./redis-4.0.9 /usr/local/redis/</pre>

#### step4:进入redis
> leftSide=`true`

- NOTE
<pre>进入redis文件夹内


cd /usr/local/redis/</pre>

#### step5:生成
> leftSide=`true`

- NOTE
<pre>编译源码，生成redis

sudo make</pre>

#### step6:测试
> leftSide=`true`

- NOTE
<pre>sudo make test</pre>

#### step7:安装
> leftSide=`true`

- NOTE
<pre>将redis的命令安装到/usr/local/bin/
sudo make install</pre>

#### step8:查看
> leftSide=`true`

- NOTE
<pre>进入目录/usr/local/bin中查看
cd /usr/local/bin
ls -all

redis-server redis服务器
redis-cli redis命令行客户端
redis-benchmark redis性能测试工具
redis-check-aof AOF文件修复工具
redis-check-rdb RDB文件检索工具</pre>

#### step9:配置
> leftSide=`true`

- NOTE
<pre>配置文件目录为/usr/local/redis/redis.conf

将redis文件夹中的配置文件移到linux系统配置文件夹中

以后开启redis-server 从系统配置文件夹中读取配置

sudo cp /usr/local/redis/redis.conf /etc/redis/</pre>

### Mac
> collapsed=`true`,leftSide=`true`


#### 安装Homebrew
- LINK
<pre>https://brew.sh/</pre>

#### 使用brew安装Redis
> leftSide=`true`

- LINK
<pre>https://www.cnblogs.com/cloudshadow/p/mac_brew_install_redis.html</pre>

## Redis配置
> collapsed=`true`,leftSide=`true`


### 配置文件
- NOTE
<pre>Redis的配置信息在/etc/redis/redis.conf下。

sudo vi /etc/redis/redis.conf</pre>

### 核心配置
> collapsed=`true`,leftSide=`true`

- LINK
<pre>http://blog.csdn.net/ljphilp/article/details/52934933</pre>

#### 绑定IP
- NOTE
<pre>bind 127.0.0.1 
默认绑定本机ip,当需要远程访问，可将此行注释，或者绑定一个真实的 ip
</pre>

#### 端
> leftSide=`true`

- NOTE
<pre>默认端口 6379</pre>

#### 守护进程
> leftSide=`true`

- NOTE
<pre>
    如果以守护进程运⾏，则不会在命令⾏阻塞，类似于服务
    如果以⾮守护进程运⾏，则当前终端被阻塞
    设置为yes表示守护进程，设置为no表示⾮守护进程
    推荐设置为yes

    daemonize yes
</pre>

#### 数据文件
> leftSide=`true`

- NOTE
<pre>dbfilename dump.rdb</pre>

#### 数据文件存储路径
> leftSide=`true`

- NOTE
<pre>dir /var/lib/redis</pre>

#### 日志文件
> leftSide=`true`

- NOTE
<pre>logfile &quot;/var/log/redis/redis-server.log&quot;</pre>

#### 数据库
> leftSide=`true`

- NOTE
<pre>database 16
编号从0到15
打开redis
进入默认数据库为 0</pre>

#### 主从复制
> leftSide=`true`

- NOTE
<pre>双机备份
slaveof</pre>

## Redis数据结构
- LINK
<pre>http://redis.cn/commands.html</pre>
- NOTE
<pre>redis是key-value的数据结构，每条数据都是⼀个键值对
键的类型是字符串

注意：键不能重复

值的类型分为五种：

    字符串string
    哈希hash
    列表list
    集合set
    有序集合zset

</pre>

### String
> collapsed=`true`

- NOTE
<pre>字符串类型是 Redis 中最为基础的数据存储类型，
它在 Redis 中是二进制安全的，
这便意味着该类型可以接受任何格式的数据，
如JPEG图像数据或Json对象描述信息等。
在Redis中字符串类型的Value最多可以容纳的数据长度是512M。</pre>

#### 保存
> collapsed=`true`


##### 设置键值
- NOTE
<pre>set key value

例1：设置键为name值为itcast的数据

    set name itcast
</pre>

##### 设置键值及过期时间
- NOTE
<pre>setex key seconds value

例2：设置键为aa值为aa过期时间为3秒的数据

    setex aa 3 aa
</pre>

##### 设置多个键值
- NOTE
<pre>mset key1 value1 key2 value2 ...
例3：设置键为'a1'值为'python'、键为'a2'值为'java'、键为'a3'值为'c'

    mset a1 python a2 java a3 c
</pre>

##### 追加值
- NOTE
<pre>append key value

例4：向键为a1中追加值' haha'

    append 'a1' 'haha'
</pre>

#### 获取
> collapsed=`true`


##### 获取
- NOTE
<pre>get key

例5：获取键'name'的值

    get 'name'

</pre>

##### 获取多个键的多个值
- NOTE
<pre>mget key1 key2 ...

例6：获取键a1、a2、a3'的值

    mget a1 a2 a3
</pre>

#### 删除
> collapsed=`true`


##### 删除键
- NOTE
<pre>del key1 key2


</pre>

### Hash
- NOTE
<pre> hash⽤于存储对象，对象的结构为属性、值
    值的类型为string</pre>

#### 增加、修改

#### 获取

#### 删除

### List

### Set

### Zset
